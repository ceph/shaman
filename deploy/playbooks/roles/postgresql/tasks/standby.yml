- name: "standby | stop postgresql"
  become: true
  service:
    name: postgresql
    state: stopped

- set_fact: timestamp="{{lookup('pipe','date +%Y-%m-%d-%H-%M-%S')}}"

- name: "standby | move current data directory out"
  become: true
  command: "mv {{ postgresql_cfg_data_directory }} {{ postgresql_cfg_data_directory }}_{{ timestamp }}"
  ignore_errors: true
  when: postgresql_init_replication

- name: read pseudo-random password for the postgres replication user if it exists
  local_action: command cat {{ playbook_dir }}/tmp/replication_user_password
  register: generated_replication_user_password
  changed_when: false

- include: configure.yml

- name: "standby | write .pgpass for postgres user"
  become: true
  template:
    dest: "~{{ postgresql_superuser}}/.pgpass"
    src: pgpass.j2
    mode: 0600
    owner: "{{ postgresql_superuser }}"
    group: "{{ postgresql_superuser }}"

- name: "standby | initialize standby postgresql basebackup"
  command: "pg_basebackup --xlog-method=stream -h {{ primary_ip }} -U {{ postgresql_replication_user }} -D {{ postgresql_cfg_data_directory }} -Pw"
  become_user: postgres
  become: true
  when: postgresql_init_replication

- name: "standby | configure recovery.conf"
  become: true
  template:
    src: recovery.conf.j2
    dest: "{{ postgresql_cfg_data_directory }}/recovery.conf"
    owner: "{{ postgresql_superuser }}"
    group: "{{ postgresql_superuser }}"
    mode: 0640

- name: "standby | start postgresql"
  become: true
  service:
    name: postgresql
    state: started
