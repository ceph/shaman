---

- hosts: postgresql_primary
  user: vagrant
  roles:
    - postgresql
  vars:
     app_name: "shaman"
     use_ssl: true
     ansible_ssh_port: 22
     development_server: true
     fqdn: "localhost"
     api_user: "admin"
     api_key: "secret"
     # postgres specific
     postgresql_replication: true
     postgresql_replication_primary_ip: "{{ primary_ip }}"
     postgresql_cfg_listen_addresses: "localhost,127.0.0.1,{{ primary_ip }}"
     postgresql_cfg_wal_level: 'hot_standby'
     postgresql_cfg_max_wal_senders: 3
     postgresql_cfg_archive_mode: 'on'
     postgresql_cfg_archive_command: 'test ! -f {{ postgresql_archive_dir_path }}/%f && cp %p {{ postgresql_archive_dir_path }}/%f'

     postgresql_users:
       - user: "{{ app_name }}"
         connections:
           - database: "{{ app_name }}"
             type: local
             auth: md5
           - database: "{{ app_name }}"
             type: host
             address: "{{ secondary_ip }}/32"
             auth: md5
           - database: "{{ app_name }}"
             type: host
             address: "{{ primary_ip }}/32"
             auth: md5

     postgresql_replication_hosts:
       - address: "{{ secondary_ip }}"
         auth: md5

- hosts: postgresql_secondary
  user: vagrant
  roles:
    - postgresql
  vars:
     postgresql_replication: true
     # this is required the first time around
     #postgresql_init_replication: true
     app_name: "shaman"
     use_ssl: true
     ansible_ssh_port: 22
     development_server: true
     fqdn: "localhost"
     api_user: "admin"
     api_key: "secret"
     # postgres specific
     postgresql_cfg_listen_addresses: "localhost,127.0.0.1,{{ secondary_ip }}"
     postgresql_replication_primary_ip: "{{ primary_ip }}"
     postgresql_cfg_hot_standby: 'on'
     postgresql_cfg_archive_command: 'test ! -f {{ postgresql_archive_dir_path }}/%f && cp %p {{ postgresql_archive_dir_path }}/%f'

     postgresql_users:
       - user: "{{ app_name }}"
         connections:
           - database: "{{ app_name }}"
             type: local
             auth: md5
           - database: "{{ app_name }}"
             type: host
             address: "{{ primary_ip }}/32"
             auth: md5
           - database: "{{ app_name }}"
             type: host
             address: "{{ secondary_ip }}/32"
             auth: md5

     postgresql_replication_hosts:
       - address: "{{ secondary_ip }}"
         auth: md5

- hosts: app
  user: vagrant
  roles:
    - common
  vars:
     app_name: "shaman"
     use_ssl: true
     wsgi_file: wsgi.py
     wsgi_callable: application
     ansible_ssh_port: 22
     restart_app: true
     branch: "main"
     development_server: true
     fqdn: "{{ inventory_hostname }}"
     nginx_ssl_cert_path: "/etc/ssl/certs/{{ fqdn }}-bundled.crt"
     nginx_ssl_key_path: "/etc/ssl/private/{{ fqdn }}.key"
     api_user: "admin"
     api_key: "secret"
     rabbit_host: "localhost"
     rabbit_user: "guest"
     rabbit_pw: "guest"
     chacra_verify_ssl: False
  tags:
    - deploy_app
